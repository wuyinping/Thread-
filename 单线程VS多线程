from MyThread import MyThread
from time import ctime, sleep
#定义斐波那契数列函数
def fib(x):
    sleep(0.1)
    if x < 2: return 1
    return (fib(x-2) + fib(x-1))
def fac(x):
    sleep(0.1)
    if x < 2: return 1
    return (x * fac(x-1))
def sum(x):
    sleep(0.1)
    if x < 2: return 1 
    return (x + sum(x-1))

funcs = [fib, fac, sum]
n = 10

def main():
    nfuncs = range(len(funcs))
    print 'starting *** SINGLE THREAD****' ,ctime()
    for i in nfuncs:
        print 'starting', funcs[i].__name__, 'at:', ctime()
        print funcs[i](n)
        print funcs[i].__name__, 'finished at:', ctime()
    print 'END *** SINGLE THREAD****' ,ctime()
    print '\nstarting*** MULTIPLE THREADS****',ctime()
    threads = []
    for i in nfuncs:
        t = MyThread(funcs[i],(n,),funcs[i].__name__)
        threads.append(t)
    for i in nfuncs:
       threads[i].start()
    for i in nfuncs:
        threads[i].join()
        print threads[i].getResult()
    print '\nEND*** MULTIPLE THREADS****',ctime()
    print 'all DONE'

if __name__ == '__main__':
    main()
